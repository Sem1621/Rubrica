@page "/page"
@namespace Components.Pages
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using System.Linq
@using Microsoft.EntityFrameworkCore
@using Rubrica.helper
@using Rubrica.Data
@inject IJSRuntime JS
@inject IDbContextFactory<DataContext> DbFactory
@inject State stato
<div class="container mycontainer">
<EditForm Model="@tipoContatto" OnValidSubmit="@Submit">

	
	<!-- Default form contact -->
<div class="text-center border border-light p-5">

    <p class="h4 mb-4">Contact us</p>

    <!-- Name -->
    <input type="text" id="telefono" class="form-control mb-4" placeholder="Telefono" @bind-value="tipoContatto.telefono">

    <!-- Email -->
    <input type="email" id="email" class="form-control mb-4" placeholder="E-mail"  @bind-value="tipoContatto.email">

    <!-- Send button -->
    <button class="btn btn-info btn-block" type="submit" disabled="@loggato">aggioungi</button>

</div>
</EditForm>
</div>

@code {
	[Inject]
	NavigationManager navManager { get; set; }
	private TipoContatto tipoContatto = new TipoContatto();
	private bool loggato = true;

	protected override void OnInitialized()
	{
		base.OnInitialized();
		if (stato.utenteLoggato != null)
		{
			loggato = false;
		}
	}

	private void Submit()
	{
		try
		{
			if(!loggato){
				loggato = false;
				var context = DbFactory.CreateDbContext();
				Contact contatto = new Contact();
				tipoContatto.contacts.Add(contatto);
				context.TipoContatto.Add(tipoContatto);
				stato.utenteLoggato.contatti.Add(contatto);
				context.Utente.Update(stato.utenteLoggato);
				context.SaveChanges();
				context.Dispose();
			}
			//await JS.InvokeVoidAsync("console.log", JsonSerializer.Serialize(contatto));
		}
		finally
		{
			loggato = true;
			navManager.NavigateTo("lista");
		}
	}
}
