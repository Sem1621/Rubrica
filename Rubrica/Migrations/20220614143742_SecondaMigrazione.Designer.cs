// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rubrica.Data;

#nullable disable

namespace Rubrica.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220614143742_SecondaMigrazione")]
    partial class SecondaMigrazione
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("tipoContattoId")
                        .HasColumnType("int");

                    b.Property<int>("utenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("tipoContattoId");

                    b.HasIndex("utenteId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Models.TipoContatto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoContatto");
                });

            modelBuilder.Entity("Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utente");
                });

            modelBuilder.Entity("Models.Contact", b =>
                {
                    b.HasOne("Models.TipoContatto", "tipoContatto")
                        .WithMany("contacts")
                        .HasForeignKey("tipoContattoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Utente", "utente")
                        .WithMany("contatti")
                        .HasForeignKey("utenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoContatto");

                    b.Navigation("utente");
                });

            modelBuilder.Entity("Models.TipoContatto", b =>
                {
                    b.Navigation("contacts");
                });

            modelBuilder.Entity("Models.Utente", b =>
                {
                    b.Navigation("contatti");
                });
#pragma warning restore 612, 618
        }
    }
}
